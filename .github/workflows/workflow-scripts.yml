name : Build and Test - Refactored

on:
  push:
    branches:
      - enh/17/workflow-scripts
  pull_request:
    branches:
      - enh/17/workflow-scripts

jobs:
  unit-test:
    name: Unit Test Job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.13

    - name: Install dependencies from env.yml
      run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda env create -f env.yml -n mle-dev || conda activate mle-dev
          conda activate mle-dev

    - name: Activate Conda environment
      run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate mle-dev
          conda list

    - name: Install tree
      run: sudo apt-get install tree

    - name: Build package
      run: python setup.py sdist bdist_wheel
      working-directory: python-pack-assign

    - name: Display directory tree after build
      run: tree

    - name: Install package
      run: pip install -e .

    - name: Run unit tests
      run: |
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate mle-dev
        export PYTHONPATH=src
        pytest tests/unit_tests/
      working-directory: python-pack-assign
      continue-on-error: false


  build:
    name: build job
    needs: unit-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: 3.13

    - name: Create environment and install dependencies from env.yml
      run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda env create -f env.yml -n mle-dev || conda activate mle-dev
          conda activate mle-dev
          conda install -c conda-forge setuptools wheel

    - name: Build package
      run: python setup.py sdist bdist_wheel
      working-directory: python-pack-assign

    - name: Install package
      run: pip install python-pack-assign/dist/python_pack_assign-0.1-py3-none-any.whl

    - name: Run Installation tests
      run: |
          source $(conda info --base)/etc/profile.d/conda.sh
          conda activate mle-dev
          export PYTHONPATH=src
          pytest tests/test_installation.py
      working-directory: python-pack-assign
      continue-on-error: false

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: python-pack-assign/dist/

  deploy:
    name: deploy job
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
        activate-environment: mle-dev
        environment-file: env.yml
        auto-activate-base: false
        auto-update-conda: true
        python-version: 3.11

    - run: |
        conda info
        conda list
        conda init

    # - name: Install dependencies from env.yml
    #   run: |
          # source $(conda info --base)/etc/profile.d/conda.sh
          # conda env create -f env.yml -n mle-dev || conda activate mle-dev
          # conda activate mle-dev

    # - name: Activate Conda environment
    #   run: |
          # source $(conda info --base)/etc/profile.d/conda.sh
          # conda activate mle-dev
          # conda list

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: python-pack-assign/dist/

    # - name: Install package
    #   run: pip install python-pack-assign/dist/python_pack_assign-0.1-py3-none-any.whl

    - name: Install package in editable mode
      run: |
          pip install -e .
      working-directory: python-pack-assign

    - name: Print working directory
      run: |
        pwd

    - name: Set PYTHONPATH to include src directory
      run: |
          export PYTHONPATH=$(pwd)/python-pack-assign/src:$PYTHONPATH
          echo $PYTHONPATH  # Debugging step to ensure PYTHONPATH is correct
          # python -c 'import sys; print(sys.path)'  # Debugging step to confirm sys.path

    # - name: Check if python_package can be imported
    #   run: |
    #       source $(conda info --base)/etc/profile.d/conda.sh
    #       conda activate mle-dev
    #       python -c 'import python_package; print("python_package is available")'

    - name: Run Workflow Scripts
      run: |
        # source $(conda info --base)/etc/profile.d/conda.sh
        # source ~/.bashrc
        # conda activate mle-dev
        # python -c 'import sys; print(sys.path)'     # Print sys.path for debugging
        python scripts/data_ingest_run.py -h
        python scripts/data_ingest_run.py datasets/housing
        python scripts/train_run.py -h
        python scripts/train_run.py datasets/housing datasets/models
        python scripts/score_run.py -h
        python scripts/score_run.py datasets/models datasets/housing datasets/output
      working-directory: python-pack-assign
      # env:
      #   PYTHONPATH: ${{ github.workspace }}


  conda-test:
    name: Test Conda setup
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash -el {0}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        installer-url: https://github.com/conda-forge/miniforge/releases/download/4.8.3-2/Miniforge-pypy3-4.8.3-2-Linux-x86_64.sh
        activate-environment: mle-dev
        environment-file: env.yml
        auto-activate-base: false
        # auto-update-conda: true
        python-version: 3.13

    - name: Check conda setup
      run: |
        conda info
        conda list
        conda env list
        pip list




